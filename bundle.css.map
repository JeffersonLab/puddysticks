{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\manager\\aside\\NoDisplayAside.svelte",
    "..\\src\\manager\\widgets\\Drawer.svelte",
    "..\\src\\manager\\aside\\DisplayAside.svelte",
    "..\\src\\widgets\\Indicator.svelte",
    "..\\src\\widgets\\Gauge.svelte",
    "..\\src\\manager\\aside\\pane\\PropertiesPane.svelte",
    "..\\src\\manager\\aside\\pane\\ActionPane.svelte",
    "..\\src\\manager\\main\\pane\\DisplayNewPane.svelte",
    "..\\src\\manager\\main\\pane\\DisplayOpenPane.svelte",
    "..\\src\\manager\\widgets\\TreeNode.svelte"
  ],
  "sourcesContent": [
    "<style>\r\n    aside {\r\n        height: 100%;\r\n    }\r\n</style>\r\n<script>\r\n    import {initWidgets} from './widgets.js';\r\n    import {openRemoteFile} from './manager/util/file.js';\r\n    import Drawer from './manager/widgets/Drawer.svelte';\r\n    import DisplaySidebar from \"./manager/aside/DisplayAside.svelte\";\r\n    import NoDisplaySidebar from \"./manager/aside/NoDisplayAside.svelte\";\r\n    import DisplayMain from \"./manager/main/DisplayMain.svelte\";\r\n    import NoDisplayMain from \"./manager/main/NoDisplayMain.svelte\";\r\n    import DynamicPageTitle from './manager/util/DynamicPageTitle.svelte';\r\n\r\n    initWidgets();\r\n\r\n    let params = new URLSearchParams(location.search),\r\n            display = params.get(\"display\");\r\n\r\n    let promise;\r\n\r\n    if(display) {\r\n        promise = openRemoteFile(display);\r\n    }\r\n\r\n    function openLocalFile(event) {\r\n        display = 'localfile';\r\n        promise = new Promise(function(resolve, reject){\r\n            resolve(event.detail);\r\n        });\r\n    }\r\n\r\n    function openNewFile(event) {\r\n        display = 'newfile';\r\n        promise = new Promise(function(resolve, reject){\r\n            resolve(event.detail);\r\n        });\r\n    }\r\n\r\n    let noDisplaySelected;\r\n</script>\r\n<Drawer>\r\n    <aside slot=\"aside\">\r\n        {#if display}\r\n            <DisplaySidebar {promise}/>\r\n        {:else}\r\n            <NoDisplaySidebar bind:selected=\"{noDisplaySelected}\"/>\r\n        {/if}\r\n    </aside>\r\n    <main slot=\"main\">\r\n        {#if display}\r\n            <DisplayMain {promise}/>\r\n        {:else}\r\n            <NoDisplayMain bind:selected=\"{noDisplaySelected}\" on:localfile=\"{openLocalFile}\" on:newfile=\"{openNewFile}\"/>\r\n        {/if}\r\n    </main>\r\n</Drawer>\r\n<svelte:options tag=\"puddy-app\"/>\r\n{#await promise then config}\r\n    {#if display}\r\n        <DynamicPageTitle/>\r\n    {/if}\r\n{/await}\r\n<svelte:head>\r\n    <title>Puddysticks</title>\r\n</svelte:head>",
    "<style>\r\n    li {\r\n        cursor: pointer;\r\n    }\r\n    li:hover {\r\n        background-color: lightblue;\r\n    }\r\n    :global(li.selected) { /*Svelte wants to compile this CSS class out unless we make it global since the compiler thinks the class isn't used*/\r\n        background-color: white;\r\n    }\r\n    div {\r\n        padding-top: 8px;\r\n    }\r\n    ul {\r\n         margin-top: 0;\r\n        list-style: none;\r\n    }\r\n    ul li {\r\n        margin: 1em 0;\r\n        padding: 1em;\r\n        border-radius: 8px 0 0 8px;\r\n    }\r\n    h1 {\r\n        padding-left: 8px;\r\n        margin-top: 0;\r\n        display: block;\r\n        min-width: 242px;\r\n    }\r\n    .logo-icon {\r\n        width: 64px;\r\n        height: 64px;\r\n        background-size: cover;\r\n        display: inline-block;\r\n        background: url(icons/logo.svg) 0 0 no-repeat;\r\n    }\r\n</style>\r\n<script>\r\n    import Selectable from \"../util/Selectable.svelte\";\r\n    import { onMount } from 'svelte';\r\n\r\n    export let selected = {};\r\n\r\n    let selectable;\r\n\r\n    onMount(() => {\r\n        selectable.select('li:first-child');\r\n    });\r\n</script>\r\n<div>\r\n    <h1><i class=\"logo-icon\"></i> Puddysticks</h1>\r\n<Selectable bind:this=\"{selectable}\" filter=\"li\" bind:selected=\"{selected}\">\r\n    <ul>\r\n        <li>Open</li>\r\n        <li>New</li>\r\n    </ul>\r\n</Selectable>\r\n</div>\r\n<svelte:options tag=\"puddy-no-display-aside\"/>",
    "<style>\r\n    .aside {\r\n        position: fixed;\r\n        width: 0;\r\n        background-color: lightgray;\r\n        height: 100%;\r\n        z-index: 1;\r\n        padding: 0;\r\n        overflow-x: hidden;\r\n        transition: 0.5s;\r\n        display: flex;\r\n    }\r\n    .main {\r\n        margin-left: 0;\r\n        transition: margin-left 0.5s;\r\n        overflow: hidden;\r\n    }\r\n    .button {\r\n        position: fixed;\r\n        left: 5px;\r\n        bottom: 5px;\r\n        transition: 0.5s;\r\n        border: none;\r\n        background: url(icons/arrow-circle-right.svg) 0 0 no-repeat;\r\n        cursor: pointer;\r\n        width: 28px;\r\n        height: 28px;\r\n        outline: none;\r\n        z-index: 1;\r\n    }\r\n    .open .aside {\r\n        width: 250px;\r\n    }\r\n    .open .main {\r\n        margin-left: 250px;\r\n    }\r\n    .open .button {\r\n        background: url(icons/arrow-circle-left.svg) 0 0 no-repeat;\r\n        left: 255px;\r\n    }\r\n</style>\r\n<script>\r\n    export let config = {};\r\n\r\n    let open = true;\r\n    let button;\r\n    let aside;\r\n    let main;\r\n\r\n    function toggle() {\r\n        open = !open;\r\n    }\r\n</script>\r\n<div class=\"drawer\" class:open=\"{open}\">\r\n    <button bind:this=\"{button}\" class=\"button extra\" on:click=\"{toggle}\"></button>\r\n    <div bind:this=\"{aside}\" class=\"aside\">\r\n        <slot name=\"aside\"></slot>\r\n    </div>\r\n    <div bind:this=\"{main}\" class=\"main\">\r\n        <slot name=\"main\"></slot>\r\n    </div>\r\n</div>\r\n<svelte:options tag=\"puddy-drawer\"/>",
    "<style>\r\n    .wrapper {\r\n        position: relative;\r\n        height: 100%;\r\n        width: 250px;\r\n    }\r\n\r\n    .pane-grid {\r\n        position: absolute;\r\n        top: 40px;\r\n        bottom: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .pane-grid > .flex-cell {\r\n        flex: 1;\r\n        width: 250px;\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n\r\n    .pane-grid > .flex-cell > .detail-pane {\r\n        position: absolute;\r\n        top: 40px;\r\n        bottom: 0;\r\n        overflow: auto;\r\n        margin: 8px 0 8px 8px;\r\n        width: 242px;\r\n    }\r\n\r\n    .detail-header {\r\n        margin-left: 8px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .properties-pane {\r\n        /*height: 300px;*/\r\n        overflow: auto;\r\n    }\r\n\r\n    .action-pane {\r\n    }\r\n\r\n    .add-options {\r\n        margin-bottom: 8px;\r\n    }\r\n\r\n    /*Selection top border is cut-off without this*/\r\n    :global(.tree-pane .tree) {\r\n        margin-top: 4px;\r\n        margin-left: 1px;\r\n        margin-bottom: 1px;\r\n    }\r\n\r\n    :global(.tree-pane .selected) {\r\n        /*border-top: 1px solid red;\r\n        border-bottom: 1px solid red;*/\r\n        outline: 1px dashed red;\r\n        color: red;\r\n    }\r\n\r\n    :global(.tree-pane span) {\r\n        border: 3px solid transparent;\r\n    }\r\n\r\n    .button-bar {\r\n        padding: 8px;\r\n    }\r\n\r\n    .save-button {\r\n        float: right;\r\n    }\r\n</style>\r\n<script>\r\n    import { widgets, model } from '../util/registry.js';\r\n    import { onMount } from 'svelte';\r\n    import Tree from '../widgets/Tree.svelte';\r\n    import PropertiesEditor from './pane/PropertiesPane.svelte';\r\n    import ActionPane from './pane/ActionPane.svelte';\r\n\r\n    export let promise;\r\n\r\n    function sortKeys(obj, newObj) {\r\n        let keys = Object.keys(obj);\r\n\r\n        keys.sort();\r\n\r\n        /* We force first key to always be name, all other keys are in alphabetical order */\r\n        newObj.name = obj.name;\r\n\r\n        keys.forEach(key => {\r\n            /* Might as well remove empty properties while we're here */\r\n            if(obj[key] !== '') {\r\n                newObj[key] = obj[key];\r\n            }\r\n        });\r\n\r\n        /* TODO: should we sort dataprovider sub-object? */\r\n\r\n        if(obj.items) {\r\n            newObj.items = [];\r\n            obj.items.forEach(child => {\r\n                let newChild = {};\r\n                newObj.items.push(newChild);\r\n                sortKeys(child, newChild);\r\n            });\r\n        }\r\n    }\r\n\r\n    function save(obj) {\r\n\r\n        /*Filter out id*/\r\n        let replacer = function (key, value) {\r\n            if (key === 'id' || key === 'par') {\r\n                return undefined;\r\n            } else {\r\n                return value;\r\n            }\r\n        };\r\n\r\n        let newObj = {};\r\n\r\n        sortKeys(obj, newObj);\r\n\r\n        let json = JSON.stringify(newObj, replacer, 2);\r\n\r\n        let link = document.createElement(\"a\");\r\n\r\n        let title = obj.title || 'display';\r\n\r\n        link.href = \"data:application/json,\" + encodeURIComponent(json);\r\n        link.download = title + \".puddy\";\r\n\r\n        let body = document.getElementsByTagName('body')[0];\r\n\r\n        body.appendChild(link);\r\n\r\n        link.click();\r\n\r\n        body.removeChild(link);\r\n    }\r\n\r\n    function close() {\r\n        var url = [location.protocol, '//', location.host, location.pathname].join('');\r\n        window.location.href = url;\r\n    }\r\n\r\n    /*When DOM elements mounted and data is available*/\r\n    onMount(() => {\r\n        promise.then(function () {\r\n            selected = 'puddy-0';\r\n        });\r\n    });\r\n\r\n    let selected;\r\n\r\n    let iconizer = function(node) {\r\n        let icon = undefined;\r\n        let props = widgets[node.name];\r\n        if(props) {\r\n            icon = props.icon;\r\n        } else if(node.name === 'Display') { /* Display widget is purposely left out of registry at this time... */\r\n            icon = 'tv.svg';\r\n        }\r\n        return icon;\r\n    }\r\n\r\n</script>\r\n{#await promise}\r\n    <p>...waiting</p>\r\n{:then config}\r\n    {#if config}\r\n        <div class=\"wrapper\">\r\n            <div class=\"button-bar\">\r\n                <button on:click=\"{close}\">Menu</button>\r\n                <button class=\"save-button\" on:click=\"{()=>save(config)}\">Save</button>\r\n            </div>\r\n            <div class=\"pane-grid\">\r\n                <div class=\"flex-cell\">\r\n                    <hr/>\r\n                    <span class=\"detail-header\">Model</span>\r\n                <div class=\"detail-pane tree-pane\">\r\n                    <Tree config=\"{$model}\" {iconizer} bind:selected/>\r\n                </div>\r\n                </div>\r\n                <div class=\"flex-cell\">\r\n                    <hr/>\r\n                    <span class=\"detail-header\">Properties</span>\r\n                <div class=\"detail-pane properties-pane\">\r\n                    {#if selected}\r\n                        <PropertiesEditor selected=\"{selected}\"/>\r\n                    {/if}\r\n                </div>\r\n                </div>\r\n                <div class=\"flex-cell\">\r\n                    <hr/>\r\n                    <span class=\"detail-header\">Actions</span>\r\n                <div class=\"detail-pane action-pane\">\r\n                    {#if selected}\r\n                        <ActionPane {selected}/>\r\n                    {/if}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    {/if}\r\n{:catch error}\r\n    <p style=\"color: red\">{error.message}</p>\r\n{/await}\r\n<svelte:options tag=\"puddy-display-aside\"/>",
    "<style>\r\n    :root {\r\n        --blink-rate: 0.8s;\r\n        --on-rgb: rgb(242, 38, 19);\r\n        --on-rgba: rgba(242, 38, 19, 0.5);\r\n        --off-rgb: rgb(150, 40, 27);\r\n        --off-rgba: rgba(150, 40, 27, 0.25);\r\n    }\r\n    div {\r\n        display: inline-block;\r\n        width: 24px;\r\n        height: 24px;\r\n        background-color: var(--off-rgb);\r\n        background-image: linear-gradient(var(--on-rgba) 10%, var(--off-rgba));\r\n        border-radius: 4px;\r\n        transition: 0.5s;\r\n        box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0,0,0,.12);\r\n        position: relative;\r\n    }\r\n\r\n    .on:after {\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        border-radius: 50%;\r\n        background: radial-gradient(ellipse at 50% 45%, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.8) 14%, rgba(255, 255, 255, 0) 24%);\r\n        /*transform: skewX(70deg) skewY(0deg);*/\r\n        filter: blur(4px);\r\n        transition: 0.5s;\r\n    }\r\n\r\n    .on {\r\n        background-image: none;\r\n        background-color: var(--on-rgb);\r\n        box-shadow: 0 0 1px 2px var(--on-rgba), 0 0 1px 2px var(--off-rgba) inset;\r\n        /*box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2) inset, 0px 1px 1px 0px rgba(0, 0, 0, 0.14) inset, 0px 1px 3px 0px rgba(0,0,0,.12) inset, 0 0 1px 2px var(--on-rgba);*/\r\n        transition: 0.5s;\r\n    }\r\n\r\n    .on.flash {\r\n        animation: blink var(--blink-rate) infinite;\r\n    }\r\n\r\n    @keyframes blink {\r\n        from { background-color: var(--off-rgb); box-shadow: none; }\r\n        50% { background-color: var(--on-rgb); box-shadow: 0 0 1px 2px var(--on-rgba), 0 0 1px 2px var(--off-rgba) inset;}\r\n        to { background-color: var(--off-rgb); box-shadow: none; }\r\n    }\r\n\r\n    /*Round Yellow Indicator: \"--on-rgb: rgb(255, 255, 0); --on-rgba: rgba(255, 255, 0, 0.75); --off-rgb: rgb(255, 217, 0); --off-rgba: rgba(255, 217, 0, 0.25); border-radius: 16px; width: 16px; height: 16px;\"*/\r\n</style>\r\n<script>\r\n    /* Note: Default values are managed externally in file.js */\r\n    export let config;\r\n\r\n    /* data is separate from config because they update at different frequencies and also to avoid circular dependency since datasource config is nested inside config */\r\n    export let data = {value: 0};\r\n\r\n    let flash = false;\r\n    let onIf = function(data) {\r\n        return false;\r\n    };\r\n\r\n    $: {\r\n        /* If we used Svelte checkbox then conversion is automatic... */\r\n        flash = (config.flash === true || config.flash === 'true') ? true : false;\r\n\r\n        if (typeof config.onIf === 'function') {\r\n            onIf = config.onIf;\r\n        } else if (typeof config.onIf === 'string') {\r\n            try {\r\n                onIf = Function('\"use strict\";return (' + config.onIf + ')')();\r\n            } catch(e) {\r\n                /*console.log(e);*/\r\n            }\r\n        } else {\r\n            onIf = function(data) {return false;};\r\n        }\r\n    }\r\n\r\n    /*$: console.log(data.value);*/\r\n    /*$: console.log(onIf);*/\r\n</script>\r\n<div class=\"indicator {config.class}\" style=\"{config.style}\" class:flash=\"{flash}\" class:on=\"{onIf ? onIf(data) : {}}\"></div>\r\n<svelte:options tag=\"puddy-indicator\"/>",
    "<style>\r\n    .gauge {\r\n        display: inline-block;\r\n        position: relative;\r\n\r\n        font-family: Verdana, Geneva, sans-serif;\r\n        font-size: 12px;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        text-align: center;\r\n    }\r\n\r\n    .output {\r\n        line-height: 35px;\r\n        width: 60px;\r\n        height: 30px;\r\n        background-color: dimgray;\r\n        border-radius: 60px 60px 0 0;\r\n        position: absolute;\r\n        top: 135px;\r\n        left: 120px; /* Dependent on gauge width */\r\n        text-align: center;\r\n        color: white;\r\n    }\r\n\r\n    .outline {\r\n        fill: dimgray;\r\n    }\r\n\r\n    .critical {\r\n        fill: none;\r\n        stroke: rgb(150, 40, 27);\r\n        stroke-width: 10;\r\n    }\r\n\r\n    .meter {\r\n        fill: lightskyblue;\r\n    }\r\n\r\n    .needle {\r\n        fill: red;\r\n    }\r\n\r\n    .scale {\r\n        stroke: black;\r\n    }\r\n\r\n    text {\r\n        text-anchor: middle;\r\n        dominant-baseline: alphabetic;\r\n    }\r\n</style>\r\n<script>\r\n    /*Gauge inspired by https://codepen.io/enxaneta/pen/EVYRJJ*/\r\n\r\n    /* Note: Default values are managed externally in file.js */\r\n    export let config;\r\n\r\n    /* data is separate from config because they update at different frequencies and also to avoid circular dependency since datasource config is nested inside config */\r\n    export let data = {value: 0};\r\n\r\n    let rad = Math.PI / 180,\r\n            W = 300, /* widget bounding box width */\r\n            H = 165, /* widget bounding box height */\r\n            A = 180, /* Angle of gauge*/\r\n            R = 180, /* Reference point / origin of angle w.r.t. standard cartesian reference */\r\n            offset = 40, /* space between bounding box and arc */\r\n            cx = ~~(W / 2), /* ~~ is roughly same as Math.floor() - used to obtain int from float for example - cx is center point horizontally */\r\n            cy = 160, /* center point vertically */\r\n            r1 = cx - offset, /* radius */\r\n            delta = ~~(r1 / 4),\r\n            x1 = cx + r1, /* end of arc (outside edge) */\r\n            y1 = cy, /* end of arc (outside edge) */\r\n            r2 = r1 - delta, /* radius */\r\n            x2 = offset, /* start of arc */\r\n            y2 = cy, /* start of arc */\r\n            x3 = x1 - delta, /* end of arc (inside edge) */\r\n            y3 = cy, /* end of arc (inside edge) */\r\n            outline = getOutline(); /* SVG Path commands to draw outline */\r\n\r\n    /*$: value = data.value;*/\r\n    $: labeldecimals = config.dataprovider.labeldecimals;\r\n    $: tickdecimals = config.dataprovider.tickdecimals;\r\n\r\n    let ticks, a, meter, needle, min, max, value, critical, criticalMin, criticalMax, criticalMinAngle, criticalMaxAngle;\r\n\r\n    /*$: console.log('data.value', data.value);*/\r\n\r\n    $: {\r\n        /*console.log('dataprovider', config.dataprovider.name);*/\r\n\r\n        min = config.dataprovider.min;\r\n        max = config.dataprovider.max;\r\n\r\n        if(isNaN(min) || min === '') {\r\n            min = 0;\r\n        }\r\n\r\n        if(isNaN(max) || max === '') {\r\n            max = 100;\r\n        }\r\n\r\n        /* Convert from String to number (could use parseFloat instead) */\r\n        min = min * 1.0;\r\n        max = max * 1.0;\r\n\r\n        if(min > max) {\r\n            min = 0;\r\n            max = 100;\r\n        }\r\n\r\n        value = validateValue(data.value, min, max);\r\n\r\n        /*criticalMin = 50;\r\n        criticalMax = 75;\r\n\r\n        criticalMinAngle = getAngle(criticalMin, min, max);\r\n        criticalMaxAngle = getAngle(criticalMax, min, max);\r\n\r\n        console.log(criticalMinAngle);\r\n        console.log(criticalMaxAngle);*/\r\n\r\n        ticks = getTicks(min, max);\r\n        a = getAngle(value, min, max);\r\n        /*console.log('value', value);\r\n        console.log('min', min);\r\n        console.log('max', max);\r\n        console.log('a', a);*/\r\n        meter = getMeter(a);\r\n        needle = getNeedle(a);\r\n        //critical = getCritical(criticalMinAngle, criticalMaxAngle);\r\n    }\r\n\r\n    /*$: console.log(value);*/\r\n\r\n    function validateValue(value, min, max) {\r\n        let result = value;\r\n\r\n        if(isNaN(value) || value === '') {\r\n            result = min;\r\n        }\r\n\r\n        /* Convert from string to number */\r\n        result = result * 1.0;\r\n\r\n        if(value < min || value > max) {\r\n            result = min;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n        var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0;\r\n\r\n        return {\r\n            x: centerX + (radius * Math.cos(angleInRadians)),\r\n            y: centerY + (radius * Math.sin(angleInRadians))\r\n        };\r\n    }\r\n\r\n    /* angles are in reference to SVG cartesian coordinates which have 0,0 at upper left (not lower left like standard math).  Also grows down, not up */\r\n    function describeArc(x, y, radius, startAngle, endAngle){\r\n        let start = polarToCartesian(x, y, radius, endAngle),\r\n            end = polarToCartesian(x, y, radius, startAngle),\r\n            largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\",\r\n            sweepFlag = endAngle > startAngle ? 0 : 1,\r\n            d = [\r\n                \"M\", start.x, start.y,\r\n                \"A\", radius, radius, 0, largeArcFlag, sweepFlag, end.x, end.y\r\n            ].join(\" \");\r\n\r\n        return d;\r\n    }\r\n\r\n    function getTicks(min, max) {\r\n        let sr1 = r1 + 5,\r\n                sr2 = r2 - 5,\r\n                srT = r1 + 20,\r\n                ticks = [];\r\n\r\n        let n = 0,\r\n                amount = (Math.abs(max - min) / 10);\r\n        for (let sa = -A; sa <= 0; sa += 18) {\r\n            let sx1 = cx + sr1 * Math.cos(sa * rad),\r\n                    sy1 = cy + sr1 * Math.sin(sa * rad),\r\n                    sx2 = cx + sr2 * Math.cos(sa * rad),\r\n                    sy2 = cy + sr2 * Math.sin(sa * rad),\r\n                    sxT = cx + srT * Math.cos(sa * rad),\r\n                    syT = cy + srT * Math.sin(sa * rad),\r\n                    line = {\r\n                        x1: sx1,\r\n                        y1: sy1,\r\n                        x2: sx2,\r\n                        y2: sy2\r\n                    },\r\n                    t = min + (n * amount),\r\n                    label = {\r\n                        x: sxT,\r\n                        y: syT,\r\n                        text: tickdecimals ? t.toFixed(tickdecimals) : t\r\n                    };\r\n\r\n            ticks.push({line: line, label: label});\r\n\r\n            n++;\r\n        }\r\n\r\n        return ticks;\r\n    }\r\n\r\n    function getNeedle(a) {\r\n        let nx1 = cx + 5 * Math.cos((a - 90) * rad),\r\n                ny1 = cy + 5 * Math.sin((a - 90) * rad),\r\n                nx2 = cx + (r1 + 15) * Math.cos(a * rad),\r\n                ny2 = cy + (r1 + 15) * Math.sin(a * rad),\r\n                nx3 = cx + 5 * Math.cos((a + 90) * rad),\r\n                ny3 = cy + 5 * Math.sin((a + 90) * rad);\r\n\r\n        return nx1 + \",\" + ny1 + \" \" + nx2 + \",\" + ny2 + \" \" + nx3 + \",\" + ny3;\r\n    }\r\n\r\n    function normalizeAngle(a) {\r\n        if(a > 360) {\r\n            a = a % 360;\r\n        } else if(a < -360) {\r\n            a = a % -360;\r\n        }\r\n\r\n        if(a < 0) {\r\n            a = 360 + a;\r\n        }\r\n\r\n        return a;\r\n    }\r\n\r\n    /* this function returns a relative angle to outline arc, which is NOT what SVG uses. */\r\n    function getAngle(val, min, max) {\r\n        let /*newVal = (!isNaN(val) && val >= min && val <= max) ? val : min,*/\r\n                scale = A / Math.abs(max - min),\r\n                zeroAdj = Math.abs(0 - min),\r\n                pa = ((val + zeroAdj) * scale) - A,\r\n                p = {};\r\n\r\n        p.x = cx + r1 * Math.cos(pa * rad);\r\n        p.y = cy + r1 * Math.sin(pa * rad);\r\n\r\n        let x = p.x,\r\n                y = p.y,\r\n                lx = cx - x,\r\n                ly = cy - y;\r\n\r\n        return Math.atan2(ly, lx) / rad - A;\r\n    }\r\n\r\n    function getOutline() {\r\n        return \"M \" + x1 + \", \" + y1 + \" A\" + r1 + \",\" + r1 + \" 0 0 0 \" + x2 + \",\" + y2 + \" H\" + (offset + delta) + \" A\" + r2 + \",\" + r2 + \" 0 0 1 \" + x3 + \",\" + y3 + \" z\";\r\n    }\r\n\r\n    function getCritical(minA, maxA) {\r\n        /* Expects SVG coordinates with 0,0 at top left  */\r\n        return describeArc(cx, cy, r1 - 5, 0, 45);\r\n    }\r\n\r\n    function getMeter(a) {\r\n        a *= rad;\r\n        let     x4 = cx + r1 * Math.cos(a),\r\n                y4 = cy + r1 * Math.sin(a),\r\n                x5 = cx + r2 * Math.cos(a),\r\n                y5 = cy + r2 * Math.sin(a);\r\n\r\n        // Move to x4,y4 then create arc with radius r1 with 0 deg rotation small arc flag and anticlockwise sweep flag ending at x2, y2\r\n        // then draw horizontal line to create bar thickness then arc again with inner radius with 0 deg rotation, small arc flag and clockwise sweep flag ending at x5,y5\r\n        return \"M \" + x4 + \", \" + y4 + \" A\" + r1 + \",\" + r1 + \" 0 0 0 \" + x2 + \",\" + y2 + \" H\" + (offset + delta) + \" A\" + r2 + \",\" + r2 + \" 0 0 1 \" + x5 + \",\" + y5 + \" z\";\r\n    }\r\n</script>\r\n<div class=\"gauge {config.class}\" style=\"{config.style}\">\r\n    <svg height=\"{H}\" width=\"{W}\" viewBox=\"0 0 {W} {H}\">\r\n        <g class=\"scale\">\r\n            {#each ticks as tick}\r\n                <line x1=\"{tick.line.x1}\" y1=\"{tick.line.y1}\" x2=\"{tick.line.x2}\" y2=\"{tick.line.y2}\"></line>\r\n                <text x=\"{tick.label.x}\" y=\"{tick.label.y}\">{tick.label.text}</text>\r\n            {/each}\r\n        </g>\r\n        <path class=\"outline\" d=\"{outline}\"/>\r\n        <path class=\"meter\" d=\"{meter}\"/>\r\n        <polygon class=\"needle\" points=\"{needle}\"/>\r\n    </svg>\r\n    <div class=\"output\">{Number(value).toFixed(labeldecimals)}</div>\r\n</div>\r\n<svelte:options tag=\"puddy-gauge\"/>",
    "<style>\r\n    :global(.properties-pane .editable-value) {\r\n        margin-bottom: 8px;\r\n    }\r\n</style>\r\n<script>\r\n    import {widgets, instances, instanceStores} from '../../util/registry.js';\r\n    import DataProviderPropertiesEditor from './DataProviderPropertiesPane.svelte';\r\n\r\n    export let selected;\r\n    $: properties = instanceStores[selected];\r\n\r\n    const noneditable = ['name', 'id', 'items', 'par'];\r\n</script>\r\n    {#each Object.keys($properties).sort() as key}\r\n        {#if key === 'dataprovider'}\r\n            <div>dataprovider</div>\r\n                <div class=\"editable-value\">\r\n                    <select bind:value=\"{$properties[key].name}\">\r\n                        {#each Object.keys(widgets[$properties.name].dataproviders) as provider}\r\n                            <option>{provider}</option>\r\n                        {/each}\r\n                    </select>\r\n                </div>\r\n            <DataProviderPropertiesEditor component=\"{$properties.name}\" provider=\"{$properties[key].name}\" bind:properties=\"{$properties.dataprovider}\"/>\r\n        {:else if !noneditable.includes(key)}\r\n            <div>{key}</div>\r\n            <div class=\"editable-value\"><input type=\"text\" bind:value=\"{$properties[key]}\"/></div>\r\n        {/if}\r\n    {/each}\r\n<svelte:options tag=\"puddy-properties-pane\"/>",
    "<style>\r\n    .edit-pane,\r\n    .order-pane {\r\n        padding: 8px;\r\n    }\r\n    button {\r\n        text-align: left;\r\n        width: 90px;\r\n        height: 32px;\r\n        line-height: 26px;\r\n    }\r\n    .button-icon {\r\n        width: 16px;\r\n        height: 16px;\r\n        background-size: 16px 16px;\r\n        background-repeat: no-repeat;\r\n        display: inline-block;\r\n        vertical-align: text-bottom;\r\n    }\r\n    .arrow-up {\r\n        background-image: url(icons/arrow-up.svg);\r\n    }\r\n    .arrow-down {\r\n        background-image: url(icons/arrow-down.svg);\r\n    }\r\n    .add {\r\n        background-image: url(icons/plus.svg);\r\n    }\r\n    .remove {\r\n        background-image: url(icons/minus.svg);\r\n    }\r\n</style>\r\n<script>\r\n    import {widgets, instanceStores, model} from '../../util/registry.js';\r\n\r\n    export let selected;\r\n    $: properties = instanceStores[selected];\r\n\r\n    let addComponentSelect;\r\n\r\n    function add() {\r\n        if ($properties) {\r\n            //let obj = new components[addComponentSelect.value].constructor({target: document.createElement('div')}).config;\r\n\r\n            let obj = {};\r\n\r\n            obj.name = addComponentSelect.value;\r\n\r\n            if (obj.name === 'Panel') {\r\n                obj.items = [];\r\n            }\r\n\r\n            model.addChild($properties, obj);\r\n        }\r\n    }\r\n\r\n    function remove() {\r\n        if ($properties) {\r\n            let parent = $properties.par;\r\n            let index = parent.items.findIndex(function(node){return node.id === selected});\r\n            let selectNext = index > 0 ? parent.items[index - 1] : parent;\r\n\r\n            let toBeDeleted = $properties;\r\n\r\n            /* TODO: Neither of these works... need to investigate fix */\r\n            selected = 'puddy-0';\r\n            //selected = selectNext;\r\n\r\n            model.remove(toBeDeleted);\r\n        }\r\n    }\r\n\r\n    function up() {\r\n        if($properties) {\r\n            model.up($properties);\r\n        }\r\n    }\r\n\r\n    function down() {\r\n        if($properties) {\r\n            model.down($properties);\r\n        }\r\n    }\r\n\r\n    let canMoveUp = false;\r\n    let canMoveDown = false;\r\n\r\n    $: {\r\n        if ($properties.par) {\r\n            let index = 0;\r\n            $properties.par.items.forEach(function (item, i) {\r\n                if (item.id === $properties.id) {\r\n                    index = i;\r\n                    return;\r\n                }\r\n            });\r\n\r\n            let maxIndex = $properties.par.items.length - 1;\r\n\r\n            canMoveUp = (index > 0);\r\n            canMoveDown = (index < maxIndex);\r\n        }\r\n    }\r\n</script>\r\n    <div class=\"edit-pane\">\r\n    <div class=\"add-options\">\r\n        <button on:click=\"{add}\" disabled=\"{$properties.name !== 'Panel' && $properties.name !== 'Display'}\"><i class=\"button-icon add\"></i> Add</button>\r\n        <select bind:this=\"{addComponentSelect}\">\r\n            {#each Object.keys(widgets) as component}\r\n                <option>{component}</option>\r\n            {/each}\r\n        </select>\r\n    </div>\r\n    <div class=\"trash-pane\">\r\n        <button on:click=\"{remove}\" disabled=\"{$properties.name === 'Display'}\"><i class=\"button-icon remove\"></i> Remove</button>\r\n    </div>\r\n    </div>\r\n<div class=\"order-pane\">\r\n    <div>\r\n        <button on:click=\"{up}\" disabled=\"{!canMoveUp}\"><i class=\"button-icon arrow-up\"></i> Up</button>\r\n    </div>\r\n    <div>\r\n        <button on:click=\"{down}\" disabled=\"{!canMoveDown}\"><i class=\"button-icon arrow-down\"></i> Down</button>\r\n    </div>\r\n</div>\r\n<svelte:options tag=\"puddy-action-pane\"/>",
    "<style>\r\n        h1 {\r\n                margin-top: 0;\r\n        }\r\n        .new-container {\r\n                padding: 1em;\r\n        }\r\n</style>\r\n<script>\r\n        import { createEventDispatcher } from 'svelte';\r\n        import { openFile } from '../../util/file.js';\r\n\r\n        const dispatch = createEventDispatcher();\r\n\r\n        function newBlank() {\r\n                dispatch('newfile', openFile('{\"name\": \"Display\", \"title\": \"Untitled\"}'));\r\n        }\r\n</script>\r\n<div class=\"new-container\">\r\n        <h1>New Display</h1>\r\n        <button on:click=\"{newBlank}\">Blank</button>\r\n</div>\r\n<svelte:options tag=\"puddy-display-new-pane\"/>",
    "<style>\r\n        h1 {\r\n                margin-top: 0;\r\n        }\r\n</style>\r\n<script>\r\n        import LocalFileReader from '../../util/LocalFileReader.svelte';\r\n</script>\r\n<div style=\"padding: 1em;\">\r\n        <h1>Open Display</h1>\r\n        <h3>Examples</h3>\r\n        <ul>\r\n                <li><a href=\"?display=examples/exampleA.puddy\">Example A</a></li>\r\n        </ul>\r\n        <h2>Local</h2>\r\n        <LocalFileReader on:localfile/>\r\n</div>\r\n<svelte:options tag=\"puddy-display-open-pane\"/>",
    "<style>\r\n    span {\r\n        padding: 0 0 0 1.75em;\r\n        background-repeat: no-repeat;\r\n        background-size: 24px 24px;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n\r\n    ul {\r\n        padding: 0.2em 0 0 0.5em;\r\n        margin: 0 0 0 0.5em;\r\n        list-style: none;\r\n        border-left: 1px solid #eee;\r\n    }\r\n\r\n    li {\r\n        padding: 0.2em 0;\r\n    }\r\n</style>\r\n<script>\r\n    export let config;\r\n    export let selected;\r\n    export let iconizer;\r\n\r\n    let style = '';\r\n    let icon = iconizer ? iconizer(config) : undefined;\r\n\r\n    if(icon) {\r\n        style = 'background-image: url(icons/' + icon + ');';\r\n    }\r\n\r\n</script>\r\n<span id=\"{config.id}\" on:click=\"{(e) => selected = config.id}\" class:selected=\"{selected === config.id}\" style=\"{style}\">{config.name}</span>\r\n{#if config.items != null}\r\n    <ul>\r\n        {#each config.items as item (item.id)}\r\n            <li>\r\n                <svelte:self bind:selected config=\"{item}\" {iconizer}/>\r\n            </li>\r\n        {/each}\r\n    </ul>\r\n{/if}\r\n<svelte:options tag=\"puddy-tree-node\"/>"
  ],
  "names": [],
  "mappings": "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"
}